# 19.07.2019

Geometry optimization test: 1 water molecule in vacuum
with different numbers of freezed atoms.

To launch a geometry optmization test for a certain optimizer, type 
./run-all-tests.sh <mode>, 
where mode is bfgs, bfgstrm, lbfgs cg or sd.

resulting files are 
aims.[0-3]-fixed.<mode>.out
log.[0-3]-fixed.<mode>.ipi
sim-[0-3]-fixed.<mode>.pos_0.xyz

0-3 means the number of atoms fixed in a water molecule.
    0 and 1 are expected to give the same energy, 
    2 should give the different energy, 
    3 should throw warning "all atoms are fixed" and do nothing.

'ase-comparison' folder shows that BFGS gives the same result in both codes.

'far-away' folder gives the comparison of optimization with and without constraints 
for the system, where constraint doesn't matter: 
1 very distant atom (far beyond the interaction range) in addition to perturbed water molecule.
Here relaxation WITH and WITHOUT fixatom should give equal result and completely equal relaxation trajectory.

'count-force-calls.sh' allows to compare performance (and also to check for
the old bug with forces called twice per geop step)


RESULTS:
All optimizers pass this test successfully and give the same energies and structures (wrt defined tolerances).
But CG and SD have HUGE problems with convergence. It is unrelated to fixatoms.

#       Energy-0-fixed  Energy-1-fixed  Energy-2-fixed  i-pi force calls (3 tests together)    aims (re)initializations
BFGS      -2078.496559    -2078.496548    -2078.446833                                   28                         31
BFGSTRM   -2078.496560    -2078.496545    -2078.446833                                   30                         33
LBFGS     -2078.496560    -2078.496549    -2078.446833                                   35                         38
CG        -2078.496558    -2078.496549    -2078.446834                                  479                        482
SD        -2078.496556    -2078.496546    -2078.446615                                >1000                      >1000

If everything goes well, aims adds only 1 initialization to each run, therefore after 3 runs number of reinitializations
should be ipi + 3